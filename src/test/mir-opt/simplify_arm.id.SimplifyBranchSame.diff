- // MIR for `id` before SimplifyBranchSame
+ // MIR for `id` after SimplifyBranchSame
  
  fn id(_1: Option<u8>) -> Option<u8> {
      debug o => _1;                       // in scope 0 at $DIR/simplify-arm.rs:11:7: 11:8
      let mut _0: std::option::Option<u8>; // return place in scope 0 at $DIR/simplify-arm.rs:11:25: 11:35
      let mut _2: isize;                   // in scope 0 at $DIR/simplify-arm.rs:13:9: 13:16
      let _3: u8;                          // in scope 0 at $DIR/simplify-arm.rs:13:14: 13:15
      let mut _4: u8;                      // in scope 0 at $DIR/simplify-arm.rs:13:25: 13:26
      scope 1 {
          debug v => ((_0 as Some).0: u8); // in scope 1 at $DIR/simplify-arm.rs:13:14: 13:15
      }
  
      bb0: {
          _2 = discriminant(_1);           // scope 0 at $DIR/simplify-arm.rs:13:9: 13:16
-         switchInt(move _2) -> [0_isize: bb1, 1_isize: bb3, otherwise: bb2]; // scope 0 at $DIR/simplify-arm.rs:13:9: 13:16
+         goto -> bb1;                     // scope 0 at $DIR/simplify-arm.rs:13:9: 13:16
      }
  
      bb1: {
-         discriminant(_0) = 0;            // scope 0 at $DIR/simplify-arm.rs:14:17: 14:21
-         goto -> bb4;                     // scope 0 at $DIR/simplify-arm.rs:12:5: 15:6
-     }
- 
-     bb2: {
-         unreachable;                     // scope 0 at $DIR/simplify-arm.rs:12:11: 12:12
-     }
- 
-     bb3: {
          _0 = move _1;                    // scope 1 at $DIR/simplify-arm.rs:13:20: 13:27
-         goto -> bb4;                     // scope 0 at $DIR/simplify-arm.rs:12:5: 15:6
+         goto -> bb2;                     // scope 0 at $DIR/simplify-arm.rs:12:5: 15:6
      }
  
-     bb4: {
+     bb2: {
          return;                          // scope 0 at $DIR/simplify-arm.rs:16:2: 16:2
      }
  }
  
